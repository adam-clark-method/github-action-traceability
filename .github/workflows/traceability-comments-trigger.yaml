name: traceability-comments-trigger

permissions:
  checks: write

on:
  issue_comment:
    types:
      - created
      - edited
      - deleted

jobs:
  traceability-comments-trigger:
    runs-on: ubuntu-latest
    if: github.event.issue.pull_request
    steps:
      #      - uses: actions/github-script@v3
        #        id: get-commit
        #        with:
        #          script: |
        #            const request = {
        #              owner: context.repo.owner,
        #              repo: context.repo.repo,
        #              pull_number: context.issue.number
        #            }
        #            core.info(`Getting PR #${request.pull_number} from ${request.owner}/${request.repo}`)
        #            try {
        #              const result = await github.pulls.get(request)
        #              core.info(JSON.stringify({result}, null, 2))
        #              return result.data
        #            } catch (err) {
        #              core.setFailed(`Request failed with error ${err}`)
      #            }
      - name: "Get Commit"
        id: get-commit
        run: |
          SHA=$( gh pr view ${{ github.event.issue.number }} \
            --repo $GITHUB_REPOSITORY \
            --json headRefOid \
            --jq .headRefOid
          )
          echo "sha=$SHA" > $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: "Get Suite"
        uses: actions/github-script@v6
        id: get-suite
        with:
          script: |
            const request = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `${{ steps.get-commit.outputs.sha }}`,
              check_name: 'traceability-commits'
            }
            core.info(`Getting check-suites for ${request.ref} from ${request.owner}/${request.repo}`)
            try {
              const result = await github.rest.checks.listForRef(request)
              return result.data.check_runs[0].check_suite.id
            } catch (err) {
              core.setFailed(`Request failed with error ${err}`)
            }
      - name: "Re-request check suite"
        run: |
          echo ${{ steps.get-suite.outputs.result }}
#          curl -L \
#            -X POST \
#            -H "Accept: application/vnd.github+json" \
#            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"\
#            -H "X-GitHub-Api-Version: 2022-11-28" \
#            "https://api.github.com/repos/$GITHUB_REPOSITORY/check-suites/11407763024/rerequest"
